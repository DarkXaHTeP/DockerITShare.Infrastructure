version: '2'
services:
  sampleapp:
    image: darkxahtep/docker-itshare-sampleapp:10
    container_name: docker-itshare-sampleapp
    restart: always
    environment:
      VIRTUAL_HOST: sampleapp.darkxahtep.co.ua
      VIRTUAL_PORT: 5000
      LETSENCRYPT_HOST: sampleapp.darkxahtep.co.ua
      LETSENCRYPT_EMAIL: darkxahtep@gmail.com
      ConnectionStrings__Word_DB: "$ConnectionStrings__Word_DB"
      ConnectionStrings__Word_Redis: "$ConnectionStrings__Word_Redis"
    links:
      - sqlserver
      - redis
    depends_on:
      - sqlserver
      - redis
      - filebeat
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: docker-itshare-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: docker-itshare-letsencrypt
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    links:
      - nginx-proxy
    depends_on:
      - nginx-proxy
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-CU13-ubuntu
    container_name: docker-itshare-sqlserver
    restart: always
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: $SQLSERVER_SA_PASSWORD
      MSSQL_PID: Developer
    volumes:
      - sqldata:/var/opt/mssql
  redis:
    image: redis:5.0.4-alpine3.9
    container_name: docker-itshare-redis
    restart: always
  kibana:
    image: kibana:7.0.0
    restart: always
    links:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      VIRTUAL_HOST: kibana.darkxahtep.co.ua
      VIRTUAL_PORT: 5601
      LETSENCRYPT_HOST: kibana.darkxahtep.co.ua
      LETSENCRYPT_EMAIL: darkxahtep@gmail.com
  elasticsearch:  
    image: elasticsearch:7.0.0
    restart: always  
    environment:
      - transport.host=127.0.0.1
      - http.host=0.0.0.0
      - discovery.type=single-node
    ports:
      - 9200:9200
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.0.0
    command: filebeat -e -strict.perms=false
    restart: always  
    user: root
    volumes:
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  sqldata:
